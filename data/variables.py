SUPPORT_TASK_LIST = ['open-domain_VQA', 'text_legibility', 'image_quality', 'if_region_overlap', 'visual_object_region', 'region_generation', 'descriptive_object_region_select', 'visual_subject_region', 'object_grounding', 'object_region_selection', 'object_region_match', 'visual_object_identification', 'VQA_attribute', 'image_text_selection', 'GC_selection', 'VQA_counting', 'region_area', 'wikihow_immediate_next_step_selection', 'VQA_scene_recognition', 'descriptive_object_region_generate', 'text_type', 'VQA_object_presence', 'wikihow_next_step', 'object_relationship', 'VQA_positional_reasoning', 'wikihow_text_image_step_order', 'question_image_match', 'region_text_match', 'GC', 'ITM', 'VQA', 'object_match', 'VQA_object_recognition', 'text_localization', 'object_description_generate', 'wikihow_image_text_step_order', 'select_overlap_least_region', 'visual_attribute', 'VQA_color', 'missing_object_selection', 'visual_subject_identification', 'select_overlap_most_region', 'VQA_sport_recognition', 'multimodal_factual_checking', 'VG', 'region_caption_match', 'VQA_activity_recognition', 'region_object_selection', 'select_overlaped_region', 'image_caption', 'VQA_sentiment_understanding', 'select_nonoverlaped_region', 'VG_selection', 'VQA_utility_affordance']
NOT_SUPPORT_TASK_LIST = ['region_object_selection', 'select_overlaped_region', 'descriptive_object_region_select', 'missing_object_selection']
SUPPORT_TASK_LIST = [x for x in SUPPORT_TASK_LIST if not x in NOT_SUPPORT_TASK_LIST]

# Define domain id mapping for doremi
VL_DOMAINS = ['llava', 'mini-gpt4', 'macaw', 'lamm']
DOMAIN_TO_IDX = {
    name: idx for idx, name in enumerate(VL_DOMAINS)}

TASK_LIST = ['MNIST-M+number_recognition', 'LSUN+Image_Classification', 'LOC_NARRATIVES+coco_images_caption', 'Winoground+image_captioning', 'NOCAPS+image_caption', 'iconqa+fill_in_blank', 'VQA-E+image_captioning', 'DTD+coarse_grained_texture_classification', 'DVQA+charts_question_answer_2', 'Office_31+Image_Classification_Category', 'ImageNet-C+image_classification_weather', 'VQA_activity_recognition', 'CONCADIA+image_caption_context_1', 'DeepWeeds+weed_species_recognition', 'PlotQA+visual_question_answering', 'DVQA+charts_question_answer_1', '300w+human_portrait_classification', 'LFW+face_recognition', 'wikihow_image_text_step_order', 'HICO+human_activity_detection', 'wikihow_immediate_next_step_selection', 'PACS+guitar_image_category_classification', 'visdial+answer_question_9', 'ImageNet-C+image_classification_noise', 'coco+image_classification_appliance', 'Cars+car_brand_classification', 'LOC_NARRATIVES+ade20k_images_caption', 'FLICKR30K+caption_image', 'CrisisMMD+damage_severity_classification', 'visdial+answer_question_6', 'Yoga-82+yoga_pose_recognition', 'expw+expression_detection', 'VQAv2', 'VQA_sentiment_understanding', 'visdial+answer_question_2', 'crowdhuman+count_numbers', 'CLEVR_CoGenT+Multiple_Question_Answering', 'Total-Text+text_detection', 'DOMAIN_NET+painting_image_classification', 'ExDark+object_recognition', 'FlickrLogos-27+logo_detection', 'KVQA+image_captioning', 'VQA_positional_reasoning', 'ok_vqa', 'Office_31+Image_Classification_ObjectAndCategory', 'JHU-CROWD+scene_type_recognition', 'VQG+caption_generation', 'Clevr+Question_Answering', 'MEMOTION+sentiment_detection', 'PACS+dog_image_category_classification', 'CLEVR_CoGenT+Question_Answer_Matching', 'PACS+elephant_image_category_classification', 'coco+image_classification_vehicle', 'DOMAIN_NET+infograph_image_classification', 'FGVC_Aircraft+Aircraft_Classification_Manufacturer', 'semart+image_technique', 'SentiCap+image_sentiment_captioning', 'CrisisMMD+Informativeness_classification', 'PACS+horse_image_category_classification', 'wikihow_text_image_step_order', 'RAVEN+next_pattern', 'ImageNet-A+image_classification', 'SKETCH+living_organism_detection', 'cinic-10+image_classification_transport', 'Core50+Object_detection', 'CONCADIA+image_caption_context_2', 'semart+image_type', 'CrisisMMD+humanitarian_categories_classification', 'PACS+person_image_category_classification', 'FFHQ-Text+text-to-face_generation', 'coco+image_classification_sports', 'NABirds+body_part_detection', 'spot-the-diff+image_diff_identification', 'DOMAIN_NET+image_category_classification', 'PACS+giraffe_image_category_classification', 'KVQA+image_question_answer', 'cinic-10+object_presence_animal', 'Clevr+Multiple_Question_Answering', 'fairface+image_classification_gender', 'trainSet+image_classification', 'GQA', 'infographicvqa+single_document_question', 'FoodLogoDet-1500+food_logo_recognition', 'VQA_object_recognition', 'Caltech-256+image_classification', 'PACS+photo_object_classification', 'CLEVR+question_answer', 'VisDA-2017+image_classification', 'A-OKVQA+rationales_generation', 'Cars+car_classification', 'coco+image_classification_kitchen', 'ConceptualCaptions+image_captioning', 'cinic-10+image_classification_shipping', 'ObjectNet+Object_classfication', 'FGVC_Aircraft+Aircraft_Classification_Variant', 'DAQUAR+object_question_answer', 'A-OKVQA+answer_rationales_matching', 'fairface+image_classification_age', 'cinic-10+object_presence_shipping', 'visualgenome_vqa', 'semart+image_timeframe', 'VIQUAE+question_answer', 'image_text_selection', 'INATURALIST+supercategory_classification', 'HICO+object_classification', 'ImageNet-R+image_classification', 'LOC_NARRATIVES+flickr30k_images_caption', 'VOC2007+object_detection', 'infographicvqa+question_answer', 'iconqa+choose_txt', 'wikihow_next_step', 'coco+image_classification_animal', 'NABirds+bird_species_detection', 'WIKIART+art_classification', 'AI2D+visual_question_answering', 'Clevr+VQA_context', 'ITM', 'SKETCH+object_detection', 'semart+image_school', 'LOC_NARRATIVES+open_images_caption', 'LAD+object_detection_details', 'VQA_object_presence', 'AID+aerial_scene_classification', 'STL-10+Image_Classification', 'Places205+Image_env_classification', 'INATURALIST+phylum_classification', 'RAF_DB+human_emotion_detection', 'CONCADIA+image_description', 'ayahoo_test_images+animal_object_vehicle_image_classification', 'VQA_color', 'DOMAIN_NET+quickdraw_image_classification', 'VQA_sport_recognition', 'CUB-200-2011+Bird_Classification', 'VQA_scene_recognition', 'FGVC_Aircraft+Aircraft_Classification', 'WIT+detailed_description', 'recipe-qa+visual_coherence', 'DOMAIN_NET+clipart_image_classification', 'CLEVR_CoGenT+Question_Answering', 'ImageNet-C+image_classification_general', 'VIZWIZ+image_captioning', 'Office_31+Image_Classification_Object', 'GTSRB+image_classification', 'model-vs-human+image_style_classification', 'PICKAPIC+image_short_description', 'CoVA+webpage_recognition', 'Dark-Zurich+time_classification', 'INATURALIST+genus_classification', 'VQARAD+question_answer', 'coco+image_classification_furniture', 'ImageNet-C+image_classification_blur', 'image_caption', 'MVTecAD+image_classification', 'NUS-WIDE+Animal_classification', 'CHART2TEXT+chart_caption', 'STANFORD_DOGS+dog_classification', 'semart+image_description', 'Caltech101+Image_classification', 'DOMAIN_NET+real_image_classification', 'image_quality', 'VisDA-2017+object_classification_train', 'REDCAPS+reddit_caption_2', 'INATURALIST+family_classification', 'DeepFashion_highres_Attribute_and_Category+Cloth_Classification', 'MemeCap+image_captioning', 'visdial+answer_question_4', 'A-OKVQA+visual_question_answering', 'STVQA+image_question_answer', 'GEOMETRY3K+geometry_question_answer', 'places365+Image_Classification', 'fairface+image_classification_race', 'DOCVQA+question_answer', 'Caltech101+Living_Thing_classification', 'MemeCap+meme_captioning', 'cinic-10+image_classification_animal', 'PACS+art_painting_object_classification', 'INATURALIST+order_classification', 'Clevr+Question_Answer_Matching', 'VisDA-2017+object_classification_validation', 'REDCAPS+reddit_caption_1', 'SCUT-CTW1500+text_detection', 'MVTecAD+anomaly_detection', 'PACS+cartoon_object_classification', 'VQA-E+visual_question_answering', 'CLEVR_CoGenT+VQA_context', 'multimodal_factual_checking', 'VQA_counting', 'question_image_match', 'DTD+all_texture_detection', 'textcaps+caption_generation', 'VQA_attribute', 'ImageNet-R+image_domain_classification', 'INATURALIST+class_classification', 'ImageNet-Sketch+image_classification', 'Office-Home+Image_classification', 'VQG+question_generation', 'vizwiz+question_answer', 'INATURALIST+latin_english_name_classification', 'VQA', 'FGVC_Aircraft+Aircraft_Classification_Family', 'VQA_utility_affordance', 'PACS+house_image_category_classification', 'FUNSD+text_detection', 'Road-Anomaly+anomaly_detection', 'Set5+image_recognition']
TASK_TO_IDX = {name: idx for idx, name in enumerate(TASK_LIST)}